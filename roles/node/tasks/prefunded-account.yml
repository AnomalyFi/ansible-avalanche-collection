# Copyright (C) 2022, Gauthier Leonard
# See the file LICENSE for licensing terms.
---
- name: Check if pre-funded account user already exists
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/keystore"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: keystore.listUsers
      id: 1
  register: users_list_res

- name: Create pre-funded account user
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/keystore"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: keystore.createUser
      params:
        username: "{{ avalanche_prefunded_username }}"
        password: "{{ avalanche_prefunded_password }}"
      id: 1
  when: avalanche_prefunded_username not in users_list_res.json.result.users
  register: users_create_res
  failed_when: users_create_res.json.error is defined

- name: Give pre-funded account control over X-Chain address
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/bc/X"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: avm.importKey
      params:
        username: "{{ avalanche_prefunded_username }}"
        password: "{{ avalanche_prefunded_password }}"
        privateKey: "{{ avalanche_prefunded_private_key }}"
      id: 1
  register: import_key_res
  failed_when: import_key_res.json.error is defined

- name: Give pre-funded account control over P-Chain address
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/bc/P"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: platform.importKey
      params:
        username: "{{ avalanche_prefunded_username }}"
        password: "{{ avalanche_prefunded_password }}"
        privateKey: "{{ avalanche_prefunded_private_key }}"
      id: 1
  register: import_key_res
  failed_when: import_key_res.json.error is defined

- name: Give pre-funded account control over C-Chain address
  uri:
    url: "http://{{ avalanchego_http_host }}:{{ avalanchego_http_port }}/ext/bc/C"
    method: POST
    body_format: json
    body:
      jsonrpc: "2.0"
      method: avax.importKey
      params:
        username: "{{ avalanche_prefunded_username }}"
        password: "{{ avalanche_prefunded_password }}"
        privateKey: "{{ avalanche_prefunded_private_key }}"
      id: 1
  register: import_key_res
  failed_when: import_key_res.json.error is defined
