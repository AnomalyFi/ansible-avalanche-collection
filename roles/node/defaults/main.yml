# SPDX-License-Identifier: BSD-3-Clause
# Copyright (c) 2022-2023, E36 Knots
---
# Avalanchego version
avalanchego_version: 1.9.9

# Install directories
avalanchego_install_dir: /opt/avalanche/avalanchego
avalanchego_vms_dir: /opt/avalanche/vms

# DB directory
avalanchego_db_dir: /var/lib/avalanchego/db

# Configuration directories
avalanchego_conf_dir: /etc/avalanche/avalanchego/conf
avalanchego_staking_certs_dir: /etc/avalanche/avalanchego/staking
avalanchego_https_certs_dir: /etc/ssl/certs/avalanche/avalanchego
avalanchego_gpg_dir: /etc/avalanche/avalanchego/gnupg

# Log directory
avalanchego_log_dir: /var/log/avalanche/avalanchego

# User and group
avalanchego_user: avalanche
avalanchego_group: avalanche

# HTTP
## Change this to public IP to accept API calls from the outside
avalanchego_http_host: 127.0.0.1
avalanchego_http_port: 9650
## If set to `true`, will use existing certificates found in `avalanchego_https_local_certs_dir`
avalanchego_https_enabled: false
avalanchego_https_local_certs_dir: "{{ playbook_dir }}/files/https"

# Public IP
avalanchego_static_public_ip: true

# Staking
avalanchego_staking_port: 9651
## If set to `true`, will use existing certificates found in `avalanchego_staking_local_certs_dir`
avalanchego_staking_use_local_certs: false
avalanchego_staking_local_certs_dir: "{{ playbook_dir }}/files/staking"

# Bootstrapping
avalanchego_network_id: fuji
avalanchego_bootstrap_node_id: NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg
avalanchego_bootstrap_db: ""

# Subnets
avalanchego_track_subnets: []

# VMs
avalanchego_vms_install: []
## Example
##  - subnet-evm=0.4.10
##  - timestampvm=1.3.0
##  - spacesvm=0.0.15

# Ash protocol (https://ash.center)
## If set to `true`, will enrich the node configuration with on-chain information
## Warning: If the node is not known to the Ash protocol the role will fail
ash_node: false

# node.json
avalanchego_node_json:
  # HTTP
  http-host: "{{ avalanchego_http_host }}"
  http-port: "{{ avalanchego_http_port }}"
  api-admin-enabled: true
  api-keystore-enabled: true
  http-tls-enabled: "{{ avalanchego_https_enabled }}"
  # Staking
  staking-enabled: true
  staking-port: "{{ avalanchego_staking_port }}"
  # Consensus
  network-id: "{{ avalanchego_network_id }}"
  snow-sample-size: 20
  snow-quorum-size: 15
  snow-mixed-query-num-push-vdr: 10
  # Paths
  db-dir: "{{ avalanchego_db_dir }}"
  subnet-config-dir: "{{ avalanchego_subnets_conf_dir }}"
  chain-config-dir: "{{ avalanchego_chains_conf_dir }}"
  vm-aliases-file: "{{ avalanchego_vms_conf_dir }}/aliases.json"
  log-dir: "{{ avalanchego_log_dir }}"
  # Logging
  log-level: info
  # Subnets
  track-subnets: "{{ avalanchego_track_subnets | join(',') }}"

# Subnets configurations
avalanchego_subnets_configs: {}

# Chains configurations
avalanchego_chains_configs:
  C:
    state-sync-enabled: true

# Node keystore
## "admin user" (used by admin-user and validate tasks)
avalanche_node_username: admin
avalanche_node_password: password

## Pre-funded account (only on local network)
avalanche_prefunded_username: ewoq
avalanche_prefunded_password: I_l1ve_@_Endor
avalanche_prefunded_private_key: PrivateKey-ewoqjP7PxY4yr3iLTpLisriqt94hdyDFNgchSxGGztUrTXtNN

# Validation properties
avalanchego_validation_start_time: "{{ ansible_date_time.epoch | int + 60 }}" # in 1 minute
avalanchego_validation_end_time: "{{ ansible_date_time.epoch | int + 60 + 604800 }}" # in 1 week
avalanchego_validation_stake_amount: "{{ 1 | ash.avalanche.convert('AVAX', 'nAVAX') | int }}"
